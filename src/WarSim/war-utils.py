"""
Create the card game "War" 
where the player with the most cards at the end of 1 round wins
"""

# Create a range with max from len(x)
def range_len(x) -> range :
    """
    Return the range of the length of x

    :param x: a list
    """
    return range(1, len(x))

# Function to create deck of cards
def create_deck() -> list :
    """
    Create a deck of cards as an array of tuples
    """
    deck = []
    for suit in range(4) :
        for rank in range(1, 14) :
            deck.append((suit, rank))
    return deck

# Function to shuffle the deck of cards
def shuffle_deck(deck) :
    """
    Shuffle the deck of cards

    :param deck: a deck of cards generated by create_deck()
    """
    import random
    random.shuffle(deck)
    return deck

# Deal our_deck to the player and computer
def deal_cards(deck) :
    """
    Deal the cards to the player and computer

    :param deck: a deck of cards generated by create_deck()
    """
    our_deck = []
    for i in range(26) :
        our_deck.append(deck.pop())
    return our_deck 

# Play the game
def play_game(player_deck, computer_deck) :
    """
    For each turn, compare the card in the player's deck and the computer's deck
    The higher ranked card wins and is added to the winner's deck out_deck

    :param player_deck: a deck of cards generated by deal_cards()
    :param computer_deck: a deck of cards generated by deal_cards()
    """
    player_out_deck, computer_out_deck = [], []
    for i in range_len(player_deck) :
        if player_deck[i] > computer_deck[i] :
            player_out_deck.append(computer_deck[i])
        else :
            computer_out_deck.append(player_deck[i])
    return player_out_deck, computer_out_deck


# Find game winner
def find_winner(player_deck, computer_deck) :
    """
    Find the winner of the game from a two player game

    :param player_deck: a deck of cards generated by play_game()
    :param computer_deck: a deck of cards generated by play_game()
    """
    if len(player_deck) > len(computer_deck) :
        print("Player wins!")
    elif len(player_deck) < len(computer_deck) :
        print("Computer wins!")
    else :
        print("It's a tie!")

""" 
Simulate n war battles between two players
"""
def simulate_war(n : int) :
    """Simulate n war battles between two players
    
    :param n: number of war battles to simulate
    """
    player_wins, computer_wins = [], []
    for i in range(n) :
        shuffled_deck = shuffle_deck(create_deck())
        player_deck = deal_cards(shuffled_deck)
        computer_deck = deal_cards(shuffled_deck)
        player_deck, computer_deck = play_game(player_deck, computer_deck)
        if len(player_deck) > len(computer_deck) :
            player_wins.append(1)
        elif len(player_deck) < len(computer_deck) :
            computer_wins.append(1)
    player_total, computer_total = sum(player_wins), sum(computer_wins)
    return player_total, player_total

